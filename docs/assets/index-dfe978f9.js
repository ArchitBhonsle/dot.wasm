let r,l=new Uint8Array;function d(){return l.byteLength===0&&(l=new Uint8Array(r.memory.buffer)),l}let s=0;function _(n,t){const e=t(n.length*1);return d().set(n,e/1),s=n.length,e}function U(n,t){const e=_(n,r.__wbindgen_malloc),o=s,c=_(t,r.__wbindgen_malloc),i=s;return r.int8(e,o,c,i)}function F(n,t){const e=_(n,r.__wbindgen_malloc),o=s,c=_(t,r.__wbindgen_malloc),i=s;return r.uint8(e,o,c,i)}let f=new Uint16Array;function M(){return f.byteLength===0&&(f=new Uint16Array(r.memory.buffer)),f}function g(n,t){const e=t(n.length*2);return M().set(n,e/2),s=n.length,e}function W(n,t){const e=g(n,r.__wbindgen_malloc),o=s,c=g(t,r.__wbindgen_malloc),i=s;return r.int16(e,o,c,i)}function T(n,t){const e=g(n,r.__wbindgen_malloc),o=s,c=g(t,r.__wbindgen_malloc),i=s;return r.uint16(e,o,c,i)}let y=new Uint32Array;function L(){return y.byteLength===0&&(y=new Uint32Array(r.memory.buffer)),y}function p(n,t){const e=t(n.length*4);return L().set(n,e/4),s=n.length,e}function B(n,t){const e=p(n,r.__wbindgen_malloc),o=s,c=p(t,r.__wbindgen_malloc),i=s;return r.int32(e,o,c,i)}function I(n,t){const e=p(n,r.__wbindgen_malloc),o=s,c=p(t,r.__wbindgen_malloc),i=s;return r.int32(e,o,c,i)>>>0}let u=new BigUint64Array;function R(){return u.byteLength===0&&(u=new BigUint64Array(r.memory.buffer)),u}function A(n,t){const e=t(n.length*8);return R().set(n,e/8),s=n.length,e}function v(n,t){const e=A(n,r.__wbindgen_malloc),o=s,c=A(t,r.__wbindgen_malloc),i=s;return r.bigint64(e,o,c,i)}function E(n,t){const e=A(n,r.__wbindgen_malloc),o=s,c=A(t,r.__wbindgen_malloc),i=s,a=r.bigint64(e,o,c,i);return BigInt.asUintN(64,a)}let w=new Float32Array;function $(){return w.byteLength===0&&(w=new Float32Array(r.memory.buffer)),w}function h(n,t){const e=t(n.length*4);return $().set(n,e/4),s=n.length,e}function C(n,t){const e=h(n,r.__wbindgen_malloc),o=s,c=h(t,r.__wbindgen_malloc),i=s;return r.float32(e,o,c,i)}let m=new Float64Array;function S(){return m.byteLength===0&&(m=new Float64Array(r.memory.buffer)),m}function b(n,t){const e=t(n.length*8);return S().set(n,e/8),s=n.length,e}function q(n,t){const e=b(n,r.__wbindgen_malloc),o=s,c=b(t,r.__wbindgen_malloc),i=s;return r.float64(e,o,c,i)}async function x(n,t){if(typeof Response=="function"&&n instanceof Response){if(typeof WebAssembly.instantiateStreaming=="function")try{return await WebAssembly.instantiateStreaming(n,t)}catch(o){if(n.headers.get("Content-Type")!="application/wasm")console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",o);else throw o}const e=await n.arrayBuffer();return await WebAssembly.instantiate(e,t)}else{const e=await WebAssembly.instantiate(n,t);return e instanceof WebAssembly.Instance?{instance:e,module:n}:e}}function N(){const n={};return n.wbg={},n}function O(n,t){return r=n.exports,k.__wbindgen_wasm_module=t,u=new BigUint64Array,w=new Float32Array,m=new Float64Array,f=new Uint16Array,y=new Uint32Array,l=new Uint8Array,r}async function k(n){typeof n>"u"&&(n=new URL("/dot.wasm/assets/core_bg-cad1e4ec.wasm",self.location));const t=N();(typeof n=="string"||typeof Request=="function"&&n instanceof Request||typeof URL=="function"&&n instanceof URL)&&(n=fetch(n));const{instance:e,module:o}=await x(await n,t);return O(e,o)}function z(n,t){if(n.length!=t.length)throw new Error(`The vectors have different lengths (${n.length} != ${t.length})`);const e=n.constructor.name,o=t.constructor.name;if(e!=o)throw new Error(`The vectors have different types (${e} != ${o})`);switch(e=="Array"&&(n=new Float64Array(n),t=new Float64Array(t)),e){case"Int8Array":return U(n,t);case"Uint8Array":return F(n,t);case"Int16Array":return W(n,t);case"Uint16Array":return T(n,t);case"Int32Array":return B(n,t);case"Uint32Array":return I(n,t);case"BigInt64Array":return v(n,t);case"BigUint64Array":return E(n,t);case"Float32Array":return C(n,t);case"Float64Array":return q(n,t);default:throw new Error(`Type ${e} is not supported`)}}export{z as dot,k as init};
